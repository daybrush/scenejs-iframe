{"version":3,"file":"iframe.cjs.js","sources":["../src/IframeItem.ts","../src/utils.ts"],"sourcesContent":["import { SceneItem, EasingType, AnimateElement } from \"scenejs\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport default class IframeItem extends SceneItem {\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean, parentEasing?: EasingType): this {\n        super.setTime(time, isTick, isParent, parentEasing);\n        const iterationTime = this.getIterationTime();\n\n        this.sendMessage(`${isTick ? \"animate\" : \"time\"}:${iterationTime}`);\n        return this;\n    }\n    public end(): this {\n        super.end();\n        this.sendMessage(\"end\");\n        return this;\n    }\n    public pause(): this {\n        super.pause();\n        this.sendMessage(\"pause\");\n        return this;\n    }\n    public start(delay?: number): boolean {\n        const result = super.start(delay);\n\n        this.sendMessage(\"start\");\n        return result;\n    }\n    private sendMessage(message: string) {\n        const elements = this.getElements() as HTMLIFrameElement[];\n\n        elements.forEach(el => {\n            if (!el.contentWindow) {\n                return;\n            }\n            el.contentWindow.postMessage(`scene:${message}`, \"*\");\n        });\n\n    }\n}\n","import { Animator } from \"scenejs\";\nimport { addEvent, isString } from \"@daybrush/utils\";\n\nexport function register(item: Animator) {\n    addEvent(window, \"message\", e => {\n        const data = e.data;\n\n        if (!isString(data)) {\n            return;\n        }\n        const result = /(?<=^scene\\:)([^:]+)(?:\\:([^:]+))?/g.exec(data);\n\n        if (!result) {\n            return;\n        }\n        const type = result[1];\n        const value = result[2];\n\n        switch (type) {\n            case \"start\":\n                item.start(0);\n                break;\n            case \"pause\":\n                item.pause();\n                break;\n            case \"end\":\n                item.end();\n                break;\n            case \"time\":\n            case \"animate\":\n                item.setTime(parseFloat(value), type === \"animate\", true);\n                break;\n        }\n    });\n}\n"],"names":["tslib_1","time","isTick","isParent","parentEasing","_super","setTime","iterationTime","getIterationTime","sendMessage","end","pause","delay","result","start","message","elements","getElements","forEach","el","contentWindow","postMessage","SceneItem","register","item","addEvent","window","e","data","isString","exec","type","value","parseFloat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;EAAwCA,SAAA,WAAA,QAAA;;qBAAxC;;;;;;iBACW,GAAP,UAAeC,IAAf,EAAsCC,MAAtC,EAAwDC,QAAxD,EAA4EC,YAA5E;IACIC,gBAAA,CAAMC,OAAN,KAAA,KAAA,EAAcL,IAAd,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,YAAtC;;QACMG,aAAa,GAAG,KAAKC,gBAAL,EAAtB;SAEKC,WAAL,CAAiB,CAAGP,MAAM,GAAG,SAAH,GAAe,MAAxB,OAAA,GAAkCK,aAAnD;WACO,IAAP;GALG;;aAOA,GAAP;IACIF,gBAAA,CAAMK,GAAN,KAAA,KAAA;;SACKD,WAAL,CAAiB,KAAjB;WACO,IAAP;GAHG;;eAKA,GAAP;IACIJ,gBAAA,CAAMM,KAAN,KAAA,KAAA;;SACKF,WAAL,CAAiB,OAAjB;WACO,IAAP;GAHG;;eAKA,GAAP,UAAaG,KAAb;QACUC,MAAM,GAAGR,gBAAA,CAAMS,KAAN,KAAA,KAAA,EAAYF,KAAZ,CAAf;;SAEKH,WAAL,CAAiB,OAAjB;WACOI,MAAP;GAJG;;qBAMC,GAAR,UAAoBE,OAApB;QACUC,QAAQ,GAAG,KAAKC,WAAL,EAAjB;IAEAD,QAAQ,CAACE,OAAT,CAAiB,UAAAC,EAAA;UACT,CAACA,EAAE,CAACC,aAAR,EAAuB;;;;MAGvBD,EAAE,CAACC,aAAH,CAAiBC,WAAjB,CAA6B,WAASN,OAAtC,EAAiD,GAAjD;KAJJ;GAHI;;mBAWZ;EAnCwCO,kBAAxC;;SCAgBC,SAASC;EACrBC,cAAQ,CAACC,MAAD,EAAS,SAAT,EAAoB,UAAAC,CAAA;QAClBC,IAAI,GAAGD,CAAC,CAACC,IAAf;;QAEI,CAACC,cAAQ,CAACD,IAAD,CAAb,EAAqB;;;;QAGff,MAAM,GAAG,sCAAsCiB,IAAtC,CAA2CF,IAA3C,CAAf;;QAEI,CAACf,MAAL,EAAa;;;;QAGPkB,IAAI,GAAGlB,MAAM,CAAC,CAAD,CAAnB;QACMmB,KAAK,GAAGnB,MAAM,CAAC,CAAD,CAApB;;YAEQkB,IAAR;WACS,OAAL;QACIP,IAAI,CAACV,KAAL,CAAW,CAAX;;;WAEC,OAAL;QACIU,IAAI,CAACb,KAAL;;;WAEC,KAAL;QACIa,IAAI,CAACd,GAAL;;;WAEC,MAAL;WACK,SAAL;QACIc,IAAI,CAAClB,OAAL,CAAa2B,UAAU,CAACD,KAAD,CAAvB,EAAgCD,IAAI,KAAK,SAAzC,EAAoD,IAApD;;;GA1BJ,CAAR;;;;;;"}